<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://www.robinstevens.eu/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.robinstevens.eu/" rel="alternate" type="text/html" /><updated>2021-06-20T20:36:06+00:00</updated><id>https://www.robinstevens.eu/feed.xml</id><title type="html">PissedCapslock’s blog</title><subtitle>Blog filled with random stuff encountered in the daily life of a software engineer.</subtitle><author><name>Robin Stevens</name></author><entry><title type="html">Combining Etags with GZIP compression in Spring Boot</title><link href="https://www.robinstevens.eu/2021/06/20/spring-with-etag-and-gzip.html" rel="alternate" type="text/html" title="Combining Etags with GZIP compression in Spring Boot" /><published>2021-06-20T20:00:00+00:00</published><updated>2021-06-20T20:00:00+00:00</updated><id>https://www.robinstevens.eu/2021/06/20/spring-with-etag-and-gzip</id><content type="html" xml:base="https://www.robinstevens.eu/2021/06/20/spring-with-etag-and-gzip.html">&lt;p&gt;Adding Etags to the responses in a Spring Boot application is easy. 
Using GZIP to compress the responses in a Spring Boot application is easy as well.
There are plenty of blog posts available describing how to achieve either of them.&lt;/p&gt;

&lt;p&gt;However, when I tried to combine them both the GZIP compression stopped working until I tweaked some settings.&lt;/p&gt;

&lt;p&gt;In this post, I’ll very briefly describe how to active GZIP and Etag, and then discuss in a bit more detail why and how you need to change the defaults to get them to play nice together.&lt;/p&gt;

&lt;h2 id=&quot;activating-gzip-compression&quot;&gt;Activating GZIP compression&lt;/h2&gt;

&lt;p&gt;You can configure the standard Tomcat webserver in Spring Boot to GZIP the responses by adding the following to your YML properties file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-YAML&quot;&gt; server:
  compression:
    enabled: true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;activating-etags&quot;&gt;Activating ETags&lt;/h2&gt;

&lt;p&gt;Spring already has a filter that adds Etags to your responses. All you need to do is create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bean&lt;/code&gt; for it:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Filter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shallowEtagHeaderFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShallowEtagHeaderFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will add a strong Etag header to your response.&lt;/p&gt;

&lt;p&gt;The Etag is calculated from a hash based on the content of your response. 
As such, you need to make sure that your responses are deterministic.&lt;/p&gt;

&lt;p&gt;In a first attempt of adding Etags to my responses for a JSON API, I always got a different Etag for the same request.
Turns out that Jackson used a random ordering for the properties when converting my Java objects to JSON.&lt;/p&gt;

&lt;p&gt;One possible solution for this is to tell Jackson to use a fixed, alphabetical ordering:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-YAML&quot;&gt;jackson:
  mapper:
    sort_properties_alphabetically: true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;combining-etags-with-gzip-compression&quot;&gt;Combining Etags with GZIP compression&lt;/h2&gt;

&lt;p&gt;Once you’ve configured Spring to add Etags to the responses, the GZIP compression for those responses will stop to work.&lt;/p&gt;

&lt;p&gt;The reason is that the specification of a strong Etag says that a strong Etag is to be calculated not only over the body of the response, but also over some headers.
Including the header that specifies the encoding of the response.&lt;/p&gt;

&lt;p&gt;As such, when Spring sends the response (including the stron Etag header) to Tomcat, the Tomcat server refuses to GZIP the response.
Compressing the response would mean that the encoding header is adjusted, hence Tomcat would suddenly become response to re-calculate the Etag.
And Tomcat doesn’t know how to do that.&lt;/p&gt;

&lt;p&gt;You can see this in the source code (relevant snippet copied from &lt;a href=&quot;https://github.com/apache/tomcat/blob/main/java/org/apache/coyote/CompressionConfig.java&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;org.apache.coyote.CompressionConfig#useCompression&lt;/code&gt;&lt;/a&gt;):&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Check if the resource has a strong ETag&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eTag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ETag&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eTag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;W/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Has an ETag that doesn't start with &quot;W/...&quot; so it must be a&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// strong ETag&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The discussion whether this behavior in Tomcat is wanted or not can be found in &lt;a href=&quot;https://bz.apache.org/bugzilla/show_bug.cgi?id=63932&quot;&gt;their bugtracker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One possible solution for this is to switch to weak Etags by calling the corresponding setter on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShallowEtagHeaderFilter&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Filter&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shallowEtagHeaderFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;ShallowEtagHeaderFilter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ShallowEtagHeaderFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setWriteWeakETag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;In summary, in order to combine ETags with GZIP compression in Spring using the embedded Tomcat webserver, you’ll need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Enable GZIP compression through the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server.compression.enabled&lt;/code&gt; property&lt;/li&gt;
  &lt;li&gt;Add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShallowEtagHeaderFilter&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ShallowEtagHeaderFilter#setWriteWeakEtag&lt;/code&gt; method to switch to weak Etags so that Tomcat doesn’t refuse to GZIP your response&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Robin Stevens</name></author><category term="spring" /><category term="etag" /><category term="gzip" /><summary type="html">Adding Etags to the responses in a Spring Boot application is easy. Using GZIP to compress the responses in a Spring Boot application is easy as well. There are plenty of blog posts available describing how to achieve either of them.</summary></entry><entry><title type="html">Write performance of Amazon EFS</title><link href="https://www.robinstevens.eu/2021/05/30/efs-write-performance.html" rel="alternate" type="text/html" title="Write performance of Amazon EFS" /><published>2021-05-30T16:00:00+00:00</published><updated>2021-05-30T16:00:00+00:00</updated><id>https://www.robinstevens.eu/2021/05/30/efs-write-performance</id><content type="html" xml:base="https://www.robinstevens.eu/2021/05/30/efs-write-performance.html">&lt;p&gt;In our cloud setup at &lt;a href=&quot;https://xyzt.ai&quot;&gt;xyzt.ai&lt;/a&gt; we store our data on &lt;a href=&quot;https://aws.amazon.com/efs/&quot;&gt;Amazon’s Elastic File System (EFS)&lt;/a&gt; 
because we need a fast file system that can be shared between multiple machines or services.
The write speeds that we observed were however far below what was advertised by Amazon.&lt;/p&gt;

&lt;p&gt;Amazon &lt;a href=&quot;https://docs.aws.amazon.com/efs/latest/ug/performance.html&quot;&gt;says&lt;/a&gt; their EFS system offers you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;300 MB/s read speed for up to 72 minutes/day&lt;/li&gt;
  &lt;li&gt;100 MB/s write speed for up to 72 minutes/day&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While certainly not as fast as an SSD, these speeds should have been fast enough for our use-case.
However, the performance we got during our initial tests were rather disappointing.
Our gut feeling was that we didn’t quite reach that advertised 100 MB/s, so we did some experiments.&lt;/p&gt;

&lt;p&gt;For those that don’t want to go over all details, there is a &lt;a href=&quot;#summary&quot;&gt;summary&lt;/a&gt; at the end of the article.&lt;/p&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;

&lt;p&gt;For all these experiments, we’ve used the following setup&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An empty EFS file system created with the default settings&lt;/li&gt;
  &lt;li&gt;An EC2 instance with 4 vCPU and 16 GB of RAM (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;t2.xlarge&lt;/code&gt;).
We didn’t use a more powerful EC2 instance as our real setup runs on Fargate, and Fargate is at this time limited to an 8 vCPU machine.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;large-files&quot;&gt;Large files&lt;/h2&gt;

&lt;p&gt;For large files (1GB), EFS behaves exactly as advertised and as expected:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When writing on a single thread, you get 100 MB/s write speed&lt;/li&gt;
  &lt;li&gt;When writing on two threads simultaneously, each thread can write at 50 MB/s so the total write speed is still 100 MB/s&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;float-container&quot;&gt;

  &lt;div class=&quot;float-child&quot;&gt;
    &lt;div id=&quot;largefiles_perthread&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
  
  &lt;div class=&quot;float-child&quot;&gt;
    &lt;div id=&quot;largefiles_combined&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
  
&lt;/div&gt;

&lt;script&gt;
 new roughViz.BarH({
    element: '#largefiles_perthread',
    data: {
      labels: [&quot;4 threads&quot;, &quot;3 threads&quot;, &quot;2 threads&quot;, &quot;1 thread&quot;],
      values: [13, 27, 52, 102]
    },
    title: &quot;Write speed per thread in MB/s&quot;,
    titleFontSize: '1rem'
});
 new roughViz.BarH({
    element: '#largefiles_combined',
    data: {
      labels: [&quot;4 thread&quot;, &quot;3 threads&quot;, &quot;2 threads&quot;, &quot;1 threads&quot;],
      values: [104, 106, 103, 102]
    },
    title: &quot;Combined write speed in MB/s&quot;,
    titleFontSize: '1rem'
});
&lt;/script&gt;

&lt;h2 id=&quot;small-and-medium-files-single-thread&quot;&gt;Small and medium files (single thread)&lt;/h2&gt;

&lt;p&gt;When the files become smaller, it doesn’t seem possible to obtain the advertised 100MB/s write speed when only using a single thread.&lt;/p&gt;

&lt;p&gt;That in itself is not unexpected.
There is a certain overhead for each file operation, as documented by &lt;a href=&quot;https://docs.aws.amazon.com/efs/latest/ug/performance-tips.html&quot;&gt;Amazon&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The distributed nature of Amazon EFS enables high levels of availability, durability, and scalability. This distributed architecture results in a small latency overhead for each file operation. Due to this per-operation latency, overall throughput generally increases as the average I/O size increases, because the overhead is amortized over a larger amount of data.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What is however unexpected is how severely this overhead seems to limit the writing speeds we can reach.&lt;/p&gt;

&lt;div id=&quot;mediumfiles_singlethread&quot;&gt;&lt;/div&gt;

&lt;script&gt;
  new roughViz.Scatter({
  element: '#mediumfiles_singlethread',
  data: '/static_files/efs-write-performance/mediumfiles_singlethread.csv',
  x: 'File size in MB',
  y: 'Write speed in MB/s',
  xLabel: 'File size (MB)',
  yLabel: 'Write speed (MB/s)',
  width: window.innerWidth/2,
  title: &quot;Single thread write speed in MB/s&quot;
})
&lt;/script&gt;

&lt;p&gt;For files smaller than 10 MB, you get writing speeds between 20 and 50 MB/s, which is up to 5 times slower than advertised.
Only when your files are bigger than 85 MB you consistently get writing speeds above 95 MB/s.&lt;/p&gt;

&lt;p&gt;Things become even worse when your files are less than 1 MB in size:&lt;/p&gt;

&lt;div id=&quot;smallfiles_singlethread&quot;&gt;&lt;/div&gt;

&lt;script&gt;
  new roughViz.Scatter({
  element: '#smallfiles_singlethread',
  data: '/static_files/efs-write-performance/smallfiles_singlethread.csv',
  x: 'File size in kB',
  y: 'Write speed in MB/s',
  xLabel: 'File size (kB)',
  yLabel: 'Write speed (MB/s)',
  width: window.innerWidth/2,
  title: &quot;Single thread write speed in MB/s&quot;
})
&lt;/script&gt;

&lt;p&gt;For files under 10 kB, you don’t even reach 1 MB/s writing speed.&lt;/p&gt;

&lt;h2 id=&quot;small-and-medium-files-multiple-threads&quot;&gt;Small and medium files (multiple threads)&lt;/h2&gt;

&lt;p&gt;When you can use multiple threads to write small files to EFS you can obtain huge performance gains.&lt;/p&gt;

&lt;p&gt;The following measurements were taken by writing 1 MB files using multiple threads.&lt;/p&gt;

&lt;div class=&quot;float-container&quot;&gt;

  &lt;div class=&quot;float-child&quot;&gt;
    &lt;div id=&quot;oneMB-multithread-perfile&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
  
  &lt;div class=&quot;float-child&quot;&gt;
    &lt;div id=&quot;oneMB-multithread-combined&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
  
&lt;/div&gt;

&lt;script&gt;
 new roughViz.BarH({
    element: '#oneMB-multithread-perfile',
    data: {
      labels: [&quot;10 threads&quot;, &quot;9 threads&quot;, &quot;8 threads&quot;, &quot;7 threads&quot;,&quot;6 threads&quot;, &quot;5 threads&quot;, &quot;4 threads&quot;, &quot;3 threads&quot;,&quot;2 threads&quot;, &quot;1 thread&quot;],
      values: [11, 12, 14, 16, 16, 18, 20, 21, 22, 23]
    },
    title: &quot;Write speed per thread in MB/s&quot;,
    titleFontSize: '1rem'
});
 new roughViz.BarH({
    element: '#oneMB-multithread-combined',
    data: {
      labels: [&quot;10 threads&quot;, &quot;9 threads&quot;, &quot;8 threads&quot;, &quot;7 threads&quot;,&quot;6 threads&quot;, &quot;5 threads&quot;, &quot;4 threads&quot;, &quot;3 threads&quot;,&quot;2 threads&quot;, &quot;1 thread&quot;],
      values: [103, 105, 104, 105,93,86,77,61,43,23]
    },
    title: &quot;Combined write speed in MB/s&quot;,
    titleFontSize: '1rem'
});
&lt;/script&gt;

&lt;p&gt;Once we start using 7 threads or more, we manage to max out the available 100 MB/s write speed.&lt;/p&gt;

&lt;p&gt;However if we repeat the same experiment with a 500 kB file:&lt;/p&gt;

&lt;div class=&quot;float-container&quot;&gt;

  &lt;div class=&quot;float-child&quot;&gt;
    &lt;div id=&quot;halfMB-multithread-perfile&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
  
  &lt;div class=&quot;float-child&quot;&gt;
    &lt;div id=&quot;halfMB-multithread-combined&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
  
&lt;/div&gt;

&lt;script&gt;
 new roughViz.BarH({
    element: '#halfMB-multithread-perfile',
    data: {
      labels: [&quot;1024 threads&quot;, &quot;128 threads&quot;, &quot;64 threads&quot;, &quot;32 threads&quot;,&quot;16 threads&quot;, &quot;8 threads&quot;, &quot;4 threads&quot;],
      values: [0, 1, 1, 3, 6, 10, 14]
    },
    title: &quot;Write speed per thread in MB/s&quot;,
    titleFontSize: '1rem'
});
 new roughViz.BarH({
    element: '#halfMB-multithread-combined',
    data: {
      labels: [&quot;1024 threads&quot;, &quot;128 threads&quot;, &quot;64 threads&quot;, &quot;32 threads&quot;,&quot;16 threads&quot;, &quot;8 threads&quot;, &quot;4 threads&quot;],
      values: [87, 81, 79, 84,84,80,55]
    },
    title: &quot;Combined write speed in MB/s&quot;,
    titleFontSize: '1rem'
});
&lt;/script&gt;

&lt;p&gt;We can reach up to 80 MB/s with 8 threads. 
After that, we can get it to around 90 MB/s by aggressively increasing the number of threads.
But no matter how many threads we use, we couldn’t reach the 100 MB/s.&lt;/p&gt;

&lt;p&gt;Note that our machine we were using only has 4 vCPU’s.
Perhaps that a beefier machine results in some better performance.&lt;/p&gt;

&lt;p&gt;As it is clear that beyond a certain number of threads the combined write speed over all threads reaches a plafond, we did one last experiment.
We used 128 threads to write small files and measured the combined write speed over all the threads:&lt;/p&gt;

&lt;div id=&quot;smallfiles_multiplethreads&quot;&gt;&lt;/div&gt;

&lt;script&gt;
  new roughViz.Scatter({
  element: '#smallfiles_multiplethreads',
  data: '/static_files/efs-write-performance/smallfiles_multiplethreads.csv',
  x: 'File size in kB',
  y: 'Write speed in MB/s',
  xLabel: 'File size (kB)',
  yLabel: 'Write speed (MB/s)',
  width: window.innerWidth/2,
  title: &quot;Combined write speed over all 128 threads in MB/s&quot;
})
&lt;/script&gt;

&lt;p&gt;As the plot shows, for small sizes the writing performance remains far below the advertised 100 MB/s.
Even with files of 500kB in size, the best we achieved was around 80 MB/s.&lt;/p&gt;

&lt;p&gt;Once we go beyond that, we can reach the 100 MB/s limit (when using 128 threads to write in parallel):&lt;/p&gt;

&lt;div id=&quot;smallfiles_multiplethreads2&quot;&gt;&lt;/div&gt;

&lt;script&gt;
  new roughViz.Scatter({
  element: '#smallfiles_multiplethreads2',
  data: '/static_files/efs-write-performance/smallfiles_multiplethreads2.csv',
  x: 'File size in kB',
  y: 'Write speed in MB/s',
  xLabel: 'File size (kB)',
  yLabel: 'Write speed (MB/s)',
  width: window.innerWidth/2,
  title: &quot;Combined write speed over all 128 threads in MB/s&quot;
})
&lt;/script&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;From the performed experiments we can extract the following conclusions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When your files are smaller than 1 MB, you’ll get the best performance by writing as many as you can in parallel.&lt;/li&gt;
  &lt;li&gt;If your files are really small (0.5 MB or smaller), you won’t get near the advertised 100 MB/s speed.
Using multiple threads is still your best option.&lt;/li&gt;
  &lt;li&gt;When your files are between 1 and 100 MB in size, you’ll get the maximum writing speed if you use the following number of threads:
    &lt;ul&gt;
      &lt;li&gt;&amp;gt; 80MB: a single thread&lt;/li&gt;
      &lt;li&gt;&amp;gt; 40MB: 2 threads&lt;/li&gt;
      &lt;li&gt;&amp;gt; 20MB: 4 threads&lt;/li&gt;
      &lt;li&gt;&amp;gt; 1MB: 8 threads&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;When your files are over 100 MB in size, a single thread can reach the 100 MB/s writing speed limit.
If you use multiple threads to write multiple files in parallel, the available speed will be divided equally over all threads.&lt;/li&gt;
&lt;/ul&gt;

&lt;style type=&quot;text/css&quot;&gt;
.float-container {
}

.float-child {
    width: 50%;
    float: left;
}  
&lt;/style&gt;</content><author><name>Robin Stevens</name></author><category term="aws" /><category term="efs" /><summary type="html">In our cloud setup at xyzt.ai we store our data on Amazon’s Elastic File System (EFS) because we need a fast file system that can be shared between multiple machines or services. The write speeds that we observed were however far below what was advertised by Amazon.</summary></entry><entry><title type="html">Tuning the Material UI Dropzone component</title><link href="https://www.robinstevens.eu/2020/11/27/tuning-material-ui-dropzone.html" rel="alternate" type="text/html" title="Tuning the Material UI Dropzone component" /><published>2020-11-27T21:16:57+00:00</published><updated>2020-11-27T21:16:57+00:00</updated><id>https://www.robinstevens.eu/2020/11/27/tuning-material-ui-dropzone</id><content type="html" xml:base="https://www.robinstevens.eu/2020/11/27/tuning-material-ui-dropzone.html">&lt;p&gt;When looking to add a file upload using drag-and-drop to a Material-UI based React website, Google points you to the &lt;a href=&quot;https://github.com/Yuvaleros/material-ui-dropzone&quot;&gt;material-ui-dropzone&lt;/a&gt; package. 
Thanks to the documentation with a lot of sample code it is very easy to get it up-and-running. 
After using and testing it for a few days, there are however some tweaks that I needed to make it behave almost exactly like I want it.&lt;/p&gt;

&lt;p&gt;I’ll first why I wanted to change certain things. You’ll find the code for the custom component at the bottom of this post.&lt;/p&gt;

&lt;h2 id=&quot;removing-the-incorrect-drag-feedback&quot;&gt;Removing the incorrect drag feedback&lt;/h2&gt;

&lt;p&gt;The default behavior of the dropzone is to show visual feedback to the user when the file they’re about to drop doesn’t match the installed file filter on the dropzone (see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;acceptedFiles&lt;/code&gt; property). Due to the &lt;a href=&quot;https://github.com/react-dropzone/react-dropzone/tree/master/examples/accept#browser-limitations&quot;&gt;limitations of drag-and-drop in the browser&lt;/a&gt;, this feedback is not always correct.&lt;/p&gt;

&lt;p&gt;For example when testing on my machine with a filter configured to accept files with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.geojson&lt;/code&gt; extension and a matching MIME type, I got:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Safari indicated the file was valid, based on the extension. There was no MIME type info available.&lt;/li&gt;
  &lt;li&gt;Firefox and Chrome both refused the file. Debugging showed that they neither had access to the file name (hence couldn’t check the extension) and couldn’t find the MIME type. You can use &lt;a href=&quot;https://react-dropzone-mime-tester.netlify.app&quot;&gt;this site&lt;/a&gt; to test whether the MIME type of a file can be found by the dropzone.&lt;/li&gt;
  &lt;li&gt;Other files for which the MIME type could be detected (e.g. a CSV file) worked flawlessly in all browsers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;improved-visual-disabled-state&quot;&gt;Improved visual disabled state&lt;/h2&gt;

&lt;p&gt;You can easily disable the dropzone, but the default styling gave no visual indication of this.
It always looks enabled.&lt;/p&gt;

&lt;p&gt;As you can customize the styling, I used the disabled text color from the Material-UI theme and used that for both the SVG icon as well as the text.
Further, I also replace the upload icon with a forbidden icon when disabling the widget.&lt;/p&gt;

&lt;h2 id=&quot;replacing-the-alerts&quot;&gt;Replacing the alerts&lt;/h2&gt;

&lt;p&gt;The dropzone shows alerts when a file was successfully dropped or rejected.
While there is API to customize all the settings about those alerts, the widget uses its own &lt;a href=&quot;https://material-ui.com/components/snackbars/&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Snackbar&lt;/code&gt;&lt;/a&gt; component.
If your application already has a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Snackbar&lt;/code&gt; for your own alerts, the alerts coming from the widget could overlap with your own alerts.&lt;/p&gt;

&lt;p&gt;The good thing about the available API is that you can disable the showing of the alerts while still having access to them through a callback function. This allows you to show the alerts in your own &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Snackbar&lt;/code&gt; or through any other mechanism.&lt;/p&gt;

&lt;p&gt;Here I opted to only show the failure alerts, and show them underneath the widget.
One of the reasons of doing this was to combine that “error zone” with feedback from Formik when using it in a form with validation.&lt;/p&gt;

&lt;h2 id=&quot;integrating-with-formik&quot;&gt;Integrating with Formik&lt;/h2&gt;

&lt;p&gt;In our application we use &lt;a href=&quot;https://formik.org&quot;&gt;Formik&lt;/a&gt; in combination with &lt;a href=&quot;https://stackworx.github.io/formik-material-ui/&quot;&gt;Formik Material-UI&lt;/a&gt; to create, validate and submit our forms.&lt;/p&gt;

&lt;p&gt;One of the requirements for the dropzone was to integrate it with Formik which is only a matter of converting some Formik properties to dropzone properties and vice versa.&lt;/p&gt;

&lt;p&gt;Seeing as the dropzone by default has no place to show error messages, I re-used the error zone where I show the error alerts for showing the validation errors.&lt;/p&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;AlertType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;DropzoneArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;DropzoneAreaProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;material-ui-dropzone&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;createMuiTheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;MuiThemeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;useTheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@material-ui/core/styles&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Alert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@material-ui/lab/Alert&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@material-ui/core&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FieldProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getIn&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;formik&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DropzoneProps&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FieldProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Omit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DropzoneAreaProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/**
 * Convert the Formik properties to dropzone properties
 */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fieldToDropzoneArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fieldName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fieldOnChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;setFieldValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formSetFieldValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;setFieldTouched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formSetFieldTouched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;getFieldMeta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formGetFieldMeta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DropzoneProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DropzoneAreaProps&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loadedFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;formSetFieldValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fieldName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadedFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;onDrop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;formSetFieldTouched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fieldName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;onDropRejected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;formSetFieldTouched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fieldName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;onDelete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;formSetFieldTouched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fieldName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;initialFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;formGetFieldMeta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fieldName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialValue&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;??&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Dropzone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DropzoneProps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useTheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setAlert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Use different styling for the enabled&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// and disabled version of the widget&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enabledTheme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createMuiTheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;overrides&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;MuiDropzoneArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;palette&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;primary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;palette&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;primary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disabledTheme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createMuiTheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;overrides&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;MuiDropzoneArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;palette&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;palette&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;theme&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fieldError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;touched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fieldError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MuiThemeProvider&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disabledTheme&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enabledTheme&lt;/span&gt;
      &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DropzoneArea&lt;/span&gt;
        &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fieldToDropzoneArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;disableRejectionFeedback&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;showAlerts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;onAlert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;variant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AlertType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;variant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;setAlert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;setAlert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dropzoneProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;??&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isSubmitting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DropzoneArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Alert&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;severity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fieldError&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Alert&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;severity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MuiThemeProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Dropzone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;displayName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;FormikMaterialUIDropZone&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;which can be used in a Formik powered form as&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Field&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Dropzone&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;jsonFiles&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;filesLimit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;acceptedFiles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.geojson&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;text/geojson&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;maxFileSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;showFileNames&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NotInterestedIcon&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CloudUploadIcon&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;dropzoneText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;File upload is currently disabled&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Drag and drop a GeoJSON file here or click to browse for a file.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Robin Stevens</name></author><category term="react" /><category term="material-ui" /><category term="material-ui-dropzone" /><category term="dropzone" /><summary type="html">When looking to add a file upload using drag-and-drop to a Material-UI based React website, Google points you to the material-ui-dropzone package. Thanks to the documentation with a lot of sample code it is very easy to get it up-and-running. After using and testing it for a few days, there are however some tweaks that I needed to make it behave almost exactly like I want it.</summary></entry></feed>